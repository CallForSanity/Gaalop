
//Creates a point in N3 of three coordinates x,y,z
//args:
//x
//y
//z
createPoint = {
    _P(1)*(e2^e0)+_P(2)*(e0^e1)+(e1^e2)
}


//The dualization operator
//args:
//m
Dual = {
    coefficient(_P(1),1)*(e0^e1^e2)
    + coefficient(_P(1),e0)*(e1^e2)
    + coefficient(_P(1),e1)*(e2^e0)
    + coefficient(_P(1),e2)*(e0^e1)
    + coefficient(_P(1),e0^e1)*(e2)
    + coefficient(_P(1),e2^e0)*(e1)
    + coefficient(_P(1),e1^e2)*(e0)
    + coefficient(_P(1),e0^e1^e2)*(1)
}

//The reverse operator
//args:
//m
reverse = {
    coefficient(_P(1),1)*(1)
    + coefficient(_P(1),e0)*(e0)
    + coefficient(_P(1),e1)*(e1)
    + coefficient(_P(1),e2)*(e2)
    - coefficient(_P(1),e0^e1)*(e0^e1)
    - coefficient(_P(1),e0^e2)*(e0^e2)
    - coefficient(_P(1),e1^e2)*(e1^e2)
    - coefficient(_P(1),e0^e1^e2)*(e0^e1^e2)
}

// Normalizes a given multivector
//args:
//mv: The multivector
Normalize = {
    _P(1)/sqrt(_P(1)*(reverse(_P(1))))
}


// Regressive Product of two given multivectors
//args:
//mv1: The first multivector
//mv2: The second multivector
regProd = {
    *(*_P(1)^*_P(2))
}
